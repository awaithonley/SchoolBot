from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from database import getUserLang

# ************************************* 1 *************************************

russianButton = InlineKeyboardButton(callback_data="–†—É—Å—Å–∫–∏–π", text="üá∑üá∫ –†—É—Å—Å–∫–∏–π")
kazakhButton = InlineKeyboardButton(callback_data="“ö–∞–∑–∞“õ—à–∞", text="üá∞üáø “ö–∞–∑–∞“õ—à–∞")

choice_lang = InlineKeyboardMarkup(row_width=2, resize_keyboard=True)

choice_lang.add(kazakhButton)
choice_lang.add(russianButton)


# ************************************* 2 *************************************

async def mainKeyboard(userID) -> ReplyKeyboardMarkup:
    userLang = await getUserLang(userID)

    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìß –û–±—Ä–∞—â–µ–Ω–∏–µ")],
            [KeyboardButton(text="üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è")],
            [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏" if userLang == "–†—É—Å—Å–∫–∏–π" else "‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä")]
        ], resize_keyboard=True
    )

    return kb

# ************************************* 3 *************************************


async def changeKeyboardFunc(userID) -> InlineKeyboardMarkup:
    userLang = await getUserLang(userID)

    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton("‚å®Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫" if userLang == "–†—É—Å—Å–∫–∏–π" else "‚å®Ô∏è –¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É",
                                  callback_data="changeLang")]
        ]
    )

    return kb

# ************************************* 4 *************************************


async def setAppealKeyboard(userID) -> ReplyKeyboardMarkup:
    userLang = await getUserLang(userID)

    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üë©‚Äç‚öï –ü—Å–∏—Ö–æ–ª–æ–≥")],
            [KeyboardButton(text="üë®‚Äçüíº –ó–î–í–†" if userLang == "–†—É—Å—Å–∫–∏–π" else "üë®‚Äçüíº –î–¢–ñ–ñ–û")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥" if userLang == "–†—É—Å—Å–∫–∏–π" else "‚óÄÔ∏è –ê—Ä—Ç“õ–∞")]
        ], resize_keyboard=True
    )

    return kb


# ************************************* 5 *************************************
async def causeKeyboard(userID) -> ReplyKeyboardMarkup:
    userLang = await getUserLang(userID)

    causeRuArray = ["–ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "–ë—É–ª–ª–∏–Ω–≥", "–ù–µ—Ç –∂–µ–ª–∞–Ω–∏—è —É—á–∏—Ç—å—Å—è", "–ù–µ—Ç –¥—Ä—É–∑–µ–π",
                    "–ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞–º–∏", "–°–Ω–∏–∂–µ–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏"]

    causeKzArray = ["–ú—ñ–Ω–µ–∑-“õ“±–ª—ã“õ—Ç—ã“£ –±“±–∑—ã–ª—É—ã", "“ö–æ—Ä“õ—ã—Ç—É", "–û“õ—É“ì–∞ –¥–µ–≥–µ–Ω “õ“±—à—Ç–∞—Ä–ª—ã“õ—Ç—ã“£ –±–æ–ª–º–∞—É—ã", "–î–æ—Å—Ç–∞—Ä—ã –∂–æ“õ",
                    "–°—ã–Ω—ã–ø—Ç–∞—Å—Ç–∞—Ä–º–µ–Ω –∂–∞–Ω–∂–∞–ª", "–ú–æ—Ç–∏–≤–∞—Ü–∏—è–Ω—ã“£ —Ç”©–º–µ–Ω–¥–µ—É—ñ"]

    kb = ReplyKeyboardMarkup(resize_keyboard=True)

    causeArray = causeRuArray if userLang == "–†—É—Å—Å–∫–∏–π" else causeKzArray

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    for i in causeArray:
        kb.add(KeyboardButton(text=i))

    kb.add("‚óÄÔ∏è Ha–∑a–¥" if userLang == "–†—É—Å—Å–∫–∏–π" else "‚óÄÔ∏è Ap—Ç“õa")

    return kb

# ************************************* 6 *************************************


async def skipKeyboard(userID):
    userLang = await getUserLang(userID)
    kb = ReplyKeyboardMarkup(resize_keyboard=True)

    kb.add("‚ñ∂Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" if userLang == "–†—É—Å—Å–∫–∏–π" else "‚ñ∂Ô∏è ”®—Ç–∫—ñ–∑—ñ–ø –∂—ñ–±–µ—Ä—É")

    return kb


# ************************************* 7 *************************************

async def dayOfTheWeekKeyboard(userID) -> ReplyKeyboardMarkup:
    userLang = await getUserLang(userID)

    dayOfTheWeekArrayRu = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
                           "–í—Ç–æ—Ä–Ω–∏–∫",
                           "–°—Ä–µ–¥–∞",
                           "–ß–µ—Ç–≤–µ—Ä–≥",
                           "–ü—è—Ç–Ω–∏—Ü–∞",
                           ]

    dayOfTheWeekArrayKz = [
                            "–î“Ø–π—Å–µ–Ω–±—ñ",
                            "–°–µ–π—Å–µ–Ω–±—ñ",
                            "–°”ô—Ä—Å–µ–Ω–±—ñ",
                            "–ë–µ–π—Å–µ–Ω–±—ñ",
                            "–ñ“±–º–∞"
                        ]

    kb = ReplyKeyboardMarkup(resize_keyboard=True)

    causeArray = dayOfTheWeekArrayRu if userLang == "–†—É—Å—Å–∫–∏–π" else dayOfTheWeekArrayKz

    for i in causeArray:
        kb.add(KeyboardButton(text=i))

    kb.add(KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥" if userLang == "–†—É—Å—Å–∫–∏–π" else "‚óÄÔ∏è –ê—Ä—Ç“õ–∞"))

    return kb


async def timeConsultationKeyboard(userID):

    userLang = await getUserLang(userID)

    time = [
        "9:00",
        "9:30",
        "10:00",
        "10:30",
        "11:00",
        "11:30",
        "12:00",
        "12:30",
        "14:30",
        "15:00",
        "15:30",
        "16:00",
        "16:30",
        "17:00",
        "17:30"
    ]

    kb = ReplyKeyboardMarkup(resize_keyboard=True)

    for i in time:
        kb.add(KeyboardButton(text=i))

    kb.add(KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥" if userLang == "–†—É—Å—Å–∫–∏–π" else "‚óÄÔ∏è –ê—Ä—Ç“õ–∞"))

    return kb

